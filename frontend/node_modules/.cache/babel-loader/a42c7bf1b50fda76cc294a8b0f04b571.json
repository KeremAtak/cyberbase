{"ast":null,"code":"import _regeneratorRuntime from \"/home/atak/cyberbase/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/atak/cyberbase/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar baseUrl = 'http://localhost:3001/api/messages';\nvar token = null;\n\nvar getAll = function getAll() {\n  var request = axios.get(baseUrl);\n  return request.then(function (response) {\n    return response.data;\n  });\n};\n\nvar setToken = function setToken(newToken) {\n  token = \"bearer \".concat(newToken);\n};\n\nvar create =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(newObject) {\n    var config, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              headers: {\n                'Authorization': token\n              }\n            };\n            _context.next = 3;\n            return axios.post(baseUrl, newObject, config);\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function create(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar remove = function remove(id) {\n  var request = axios.delete(\"http://localhost:3001/api/messages/\".concat(id));\n  return request.then(function (response) {\n    return response.data;\n  });\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  setToken: setToken,\n  remove: remove\n};","map":{"version":3,"sources":["/home/atak/cyberbase/frontend/src/services/messages.js"],"names":["axios","baseUrl","token","getAll","request","get","then","response","data","setToken","newToken","create","newObject","config","headers","post","remove","id","delete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAG,oCAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,OAAO,GAAGJ,KAAK,CAACK,GAAN,CAAUJ,OAAV,CAAhB;AACA,SAAOG,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,CAAP;AACD,CAHD;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC7BR,EAAAA,KAAK,oBAAaQ,QAAb,CAAL;AACD,CAFD;;AAIA,IAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,MADO,GACE;AACbC,cAAAA,OAAO,EAAE;AAAE,iCAAiBZ;AAAnB;AADI,aADF;AAAA;AAAA,mBAKUF,KAAK,CAACe,IAAN,CAAWd,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CALV;;AAAA;AAKPN,YAAAA,QALO;AAAA,6CAMNA,QAAQ,CAACC,IANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANG,MAAM;AAAA;AAAA;AAAA,GAAZ;;AASA,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACC,EAAD,EAAQ;AACrB,MAAMb,OAAO,GAAGJ,KAAK,CAACkB,MAAN,8CAAmDD,EAAnD,EAAhB;AACA,SAAOb,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,CAAP;AACD,CAHD;;AAKA,eAAe;AAAEL,EAAAA,MAAM,EAANA,MAAF;AAAUQ,EAAAA,MAAM,EAANA,MAAV;AAAkBF,EAAAA,QAAQ,EAARA,QAAlB;AAA4BO,EAAAA,MAAM,EAANA;AAA5B,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/messages'\n\nlet token = null\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`http://localhost:3001/api/messages/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, setToken, remove }"]},"metadata":{},"sourceType":"module"}