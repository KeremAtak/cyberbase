{"version":3,"sources":["services/messages.js","components/Home.js","services/login.js","components/LoginForm.js","components/RegisterForm.js","components/Admin.js","ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","token","services_messages","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","this","_x","apply","arguments","setToken","newToken","concat","remove","id","delete","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logOut","event","preventDefault","window","localStorage","removeItem","setState","user","error","alert","handleChange","newMessage","target","value","addNewMessage","messageObject","content","state","date","Date","messageService","messages","helloUser","react_default","createElement","userIsLoggedIn","username","addNewMessageForm","class","onChange","type","name","placeholder","onClick","viewLoginButtons","className","href","viewAdmin","userIsAdmin","viewMessages","messagesToRender","i","length","push","_this2","loggedUserJSON","getItem","JSON","parse","console","log","React","Component","services_login","login","credentials","register","_ref2","_callee2","_context2","_x2","LoginForm","loginService","password","setItem","stringify","location","replace","t0","defineProperty","method","RegisterForm","Admin","_loop","deleteMessage","ProtectedRoute","_this$props","props","component","objectWithoutProperties","Route","assign","render","Redirect","to","App","access","BrowserRouter","Switch","exact","path","src_ProtectedRoute","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd7f32da.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/messages'\n\nlet token = null\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = (id) => {\n  const request = axios.delete(baseUrl + '/' + id)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, setToken, remove }","import React from 'react';\nimport '../styles.css'\nimport messageService from '../services/messages'\n\nclass Home extends React.Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tmessages: [],\n\t\t\tnewMessage: '',\n\t\t\tuser: null\n\t\t}\n\t}\n\n\tcomponentWillMount() {\n\t\tmessageService\n\t\t\t.getAll()\n\t\t\t.then(messages => {\n\t\t\t\tthis.setState({ messages })\n\t\t\t})\n\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedUser')\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tconsole.log(user)\n\t\t\tthis.setState({ user })\n\t\t\tmessageService.setToken(user.token)\n\t\t}\n\t}\n\n\tlogOut = (event) => {\n\t\tevent.preventDefault()\n\t\ttry {\n\t\t\twindow.localStorage.removeItem('loggedUser')\n\t\t\tthis.setState({\n\t\t\t\tuser: null\n\t\t\t})\n\t\t} catch (error) {\n\t\t\talert(error)\n\t\t}\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({ newMessage: event.target.value })\n\t}\n\n\taddNewMessage = async (event) => {\n\t\tevent.preventDefault()\n\t\tconst messageObject = {\n\t\t\tcontent: this.state.newMessage,\n\t\t\tdate: new Date(),\n\t\t\tuser: this.state.user,\n\t\t}\n\n\t\tmessageService.create(messageObject)\n\t\t\t.then(newMessage => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessages: this.state.messages.concat(newMessage),\n\t\t\t\t\tnewMessage: ''\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\thelloUser = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.userIsLoggedIn()\n\t\t\t\t? <h3>Good day, {this.state.user.username} </h3>\n\t\t\t\t\t\t: \"Hello visitor\"\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\taddNewMessageForm = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.userIsLoggedIn()\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t<input value={this.state.newMessage} onChange={this.handleChange} class=\"form-control\" type=\"text\" name=\"message\" placeholder=\"...\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t<button class=\"btn btn-primary btn-block\" type=\"submit\" onClick={this.addNewMessage}>Add new message</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: \"You may add your own comments once you log in\"\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tviewLoginButtons = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.userIsLoggedIn()\n\t\t\t\t\t\t? <button className=\"btn2 btn-6 btn-6a\" onClick={this.logOut}>Log out</button>\n\t\t\t\t\t\t: <div>\n\t\t\t\t\t\t\t<a className=\"btn2 btn-6 btn-6a\" href='/login'>Log in</a>\n\t\t\t\t\t\t\t<a className=\"btn2 btn-6 btn-6a\" href='/register'>Register</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tviewAdmin = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.userIsAdmin()\n\t\t\t\t\t\t? <a className=\"btn2 btn-6 btn-6a\" href='/admin'>Admin tools</a>\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tuserIsLoggedIn = () => {\n\t\tif (this.state.user !== null) {\n\t\t\treturn true\n\t\t}\n\t\treturn false;\n\t}\n\n\tuserIsAdmin = () => {\n        if (this.state.user !== null) {\n            if (this.state.user.username === \"Matti\") {\n                return true\n            }\n        }\n        return false\n    }\n\n\tviewMessages = () => {\n\t\tlet messagesToRender = [];\n\t\tlet messages = this.state.messages\n\t\tfor (let i = 0; i < messages.length; i++) {\n\t\t\tmessagesToRender.push(<li>{messages[i].content} ({messages[i].user.username})</li>)\n\t\t}\n\t\treturn messagesToRender\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.newMessage)\n\t\treturn (\n\t\t\t<div class=\"login-dark\">\n\t\t\t\t<form>\n\t\t\t\t\t<h1 class=\"sr-only\">Insecure cyberbase app</h1>\n\t\t\t\t\t<div>{this.helloUser()}</div>\n\t\t\t\t\t<div class=\"illustration\">\n\t\t\t\t\t\t<i class=\"icon ion-ios-locked-outline\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.viewMessages()}\n\t\t\t\t\t</ul>\n\t\t\t\t\t{this.addNewMessageForm()}\n\t\t\t\t\t{this.viewLoginButtons()}\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","\nimport axios from 'axios'\n\nconst login = async (credentials) => {\n  const response = await axios.post('http://localhost:3001/api/login', credentials)\n  return response.data\n}\n\nconst register = async (credentials) => {\n  const response = await axios.post('http://localhost:3001/api/users', credentials)\n  return response.data\n}\n\nexport default { login, register }","import React from 'react';\nimport '../styles.css'\nimport loginService from '../services/login'\nimport messageService from '../services/messages'\n\nclass LoginForm extends React.Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\tlogin = async (event) => {\n\t\tevent.preventDefault()\n\n\t\ttry {\n\t\t\tconst user = await loginService.login({\n\t\t\t\tusername: this.state.username,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t\twindow.localStorage.setItem('loggedUser', JSON.stringify(user))\n\t\t\twindow.location.replace(\"http://localhost:3000\");\n\t\t} catch (exception) {\n\t\t\tconsole.log(exception)\n\t\t}\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({ [event.target.name]: event.target.value })\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.username + ' ' + this.state.password)\n\t\treturn (\n\t\t\t<div class=\"login-dark\">\n\t\t\t\t<form method=\"post\">\n\t\t\t\t\t<h1 class=\"sr-only\">Insecure cyberbase app</h1>\n\t\t\t\t\t<h2 class=\"sr-only\">Login</h2>\n\t\t\t\t\t<div class=\"illustration\">\n\t\t\t\t\t\t<i class=\"icon ion-ios-locked-outline\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input value={this.state.username} onChange={this.handleChange} class=\"form-control\" type=\"username\" name=\"username\" placeholder=\"Username\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input value={this.state.password} onChange={this.handleChange} class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<button class=\"btn btn-primary btn-block\" type=\"submit\" onClick={this.login}>Log In</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a href='/register'>No account? Click here to register.</a>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<a href='/'>Back to main page</a>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport '../styles.css'\nimport loginService from '../services/login'\nimport messageService from '../services/messages'\n\nclass RegisterForm extends React.Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\tregister = async (event) => {\n\t\tevent.preventDefault()\n\t\ttry {\n\t\t\tconst user = await loginService.register({\n\t\t\t\tusername: this.state.username,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t\tthis.setState({ username: '', password: '' })\n\t\t\twindow.location.replace(\"http://localhost:3000/login\");\n\t\t} catch (exception) {\n\t\t\talert(exception)\n\t\t}\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({ [event.target.name]: event.target.value })\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.username + ' ' + this.state.password)\n\t\treturn (\n\t\t\t<div class=\"login-dark\">\n\t\t\t\t<form method=\"post\">\n\t\t\t\t\t<h1 class=\"sr-only\">Insecure cyberbase app</h1>\n\t\t\t\t\t<h2 class=\"sr-only\">Registration</h2>\n\t\t\t\t\t<div class=\"illustration\">\n\t\t\t\t\t\t<i class=\"icon ion-ios-locked-outline\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input value={this.state.username} onChange={this.handleChange} class=\"form-control\" type=\"username\" name=\"username\" placeholder=\"Username\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input value={this.state.password} onChange={this.handleChange} class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<button class=\"btn btn-primary btn-block\" type=\"submit\" onClick={this.register}>Register</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a href='/login'>Already registered? Click here to login.</a>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<a href='/'>Back to main page</a>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RegisterForm;\n","import React from 'react';\nimport '../styles.css'\nimport messageService from '../services/messages'\n\nclass Admin extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            messages: []\n        }\n    }\n\n    componentWillMount() {\n        messageService\n            .getAll()\n            .then(messages => {\n                this.setState({ messages })\n            })\n    }\n\n    viewMessages = () => {\n        let messagesToRender = [];\n        let messages = this.state.messages\n        for (let i = 0; i < messages.length; i++) {\n            messagesToRender.push(<li>{messages[i].content} ({messages[i].user.username})\n            <button type=\"submit\" onClick={() => this.deleteMessage(messages[i].id)}>Delete</button></li>)\n        }\n        return messagesToRender\n    }\n\n    deleteMessage = (id) => {\n        messageService.remove(id)\n    }\n\n    render() {\n        return (\n            <div class=\"login-dark\">\n                <form>\n                    <h1 class=\"sr-only\">Insecure cyberbase app</h1>\n                    <h2 class=\"sr-only\">Admin tools</h2>\n                    <div class=\"illustration\">\n                        <i class=\"icon ion-ios-locked-outline\"></i>\n                    </div>\n                    <ul>\n                        {this.viewMessages()}\n                    </ul>\n                    <a href='/'>Back to main page</a>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Admin;\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nclass ProtectedRoute extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            user: null\n        }\n    }\n\n    componentWillMount() {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            console.log(user)\n            this.setState({ user })\n        }\n    }\n\n    userIsAdmin = () => {\n        if (this.state.user !== null) {\n            if (this.state.user.username === \"Matti\") {\n                return true\n            }\n        }\n        return false\n    }\n\n    render() {\n        const { component: Component, ...props } = this.props\n\n        return (\n            <Route\n                {...props}\n                render={props => (\n                    this.userIsAdmin() ?\n                        <Component {...props} /> :\n                        <Redirect to='/' />\n                )}\n            />\n        )\n    }\n}\n\nexport default ProtectedRoute","import React from 'react';\nimport './styles.css'\nimport Home from './components/Home'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport messageService from './services/messages'\nimport Admin from './components/Admin'\nimport ProtectedRoute from './ProtectedRoute'\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tmessages: [],\n\t\t\tnewMessage: '',\n\t\t\tuser: null\n\t\t}\n\t}\n\n\n\tcomponentWillMount() {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedUser')\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tconsole.log(user.access)\n\t\t\tthis.setState({ user })\n\t\t\tmessageService.setToken(user.token)\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/login\" component={LoginForm} />\n\t\t\t\t\t<Route exact path=\"/register\" component={RegisterForm} />\n\t\t\t\t\t<ProtectedRoute path=\"/admin\" component={Admin} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}